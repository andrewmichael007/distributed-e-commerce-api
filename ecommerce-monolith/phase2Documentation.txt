
# STEP 1 
set up ports and config

-- create a .env root, add the following code snippet
PORT=3000
NODE_ENV=development
RATE_LIMIT_WINDOW_MINUTES=15
RATE_LIMIT_MAX_REQUESTS=100

-- update index.js to use .env
require('dotenv').config();

const PORT = process.env.PORT || 3000;

 #   STEP 2  
--add helmet for security headers
npm install helmet

helmet sets HTTP headers to prevent common attacks like cross-site scripting,  MIME (Multipurpose Internet Mail Extension) sniffing, Clickjacking.

const helmet = require("helmet");

app.use(helmet());


# STEP 3
-- adding rate limiting (like an api Gateway)
why? 
protects server from overload or brute force
simulates the behavior of tools like NGINX 

npm install express-rate-limit
const rateLimit = require("express-rate-limit");

const apiLimiter = rateLimit ({
--this is the time window
 windowMs: parseInt(  
--this is the number of requests
 max: parseInt(
 message: "Too many requests, try after an hour",
});

# STEP 4
-- simulating  Latency and Timeout Handling
//simulated latency
const randomDelay = Math.floor(Math.random() * 200); //
setTimeout(() => next(), randomDelay;
});

// Simulate timeout failure for test route
app.get('/simulate-timeout', (req, res) => {
  setTimeout(() => {
    res.status(504).json({ message: 'Gateway Timeout: Service too slow' });
  }, 6000); // 6 sec
});



